<!-- Booking Form Template Component with Enhanced Background Loading -->
<?php
$bg_url = '';
if ($booking['project'] === 'moon-hill') $bg_url = "/manage/pages/clients/moon-hill.jpg?version=4.4.51";
elseif ($booking['project'] === 'hill-town') $bg_url = "/manage/pages/clients/hill-town.jpg?version=4.4.51";
?>

<section class="print_area d-none"
         id="print_area_<?= (int)$p['id'] ?>"
         data-purchase-id="<?= (int)$p['id'] ?>"
         style="background: url('<?= $bg_url ?>') no-repeat center center; background-size: cover;"
         data-bg-url="<?= $bg_url ?>">
  <div class="invoice-layout">
    <div class="changable-content" id="changable_modal_content_<?= $index ?>">
      <?php
        global $project_mapping, $db;
        $field_positions = $db->where('project_id', $project_mapping[$booking['project']])->get('field_positions');
        foreach ($field_positions as $fp):
          $style = json_decode($fp->style_json, true);
          $name = $fp->field_name;
          $top = $style['top'] ?? '0px';
          $left = $style['left'] ?? '0px';
          $width = $style['width'] ?? 'auto';
          $fontSize = $style['fontSize'] ?? '15px';
          $letterSpacing = $style['letterSpacing'] ?? '0px';
          $textAlign = $style['textAlign'] ?? 'left';
          $value = '';

          switch ($name) {
            case 'client_id': $value = $client['id']; break;
            case 'project_name': $value = $proj_html; break;
            case 'applicant_name': $value = $client['name']; break;
            case 'block': $value = $booking['block']; break;
            case 'plot': $value = $booking['plot']; break;
            case 'katha': $value = $booking['katha']; break;
            case 'facing': $value = $booking['facing']; break;
            case 'road': $value = $booking['road']; break;
            case 'date': $value = date('d m Y', $p['time']); break;
            case 'reference':
              if (!empty($wo['additional']['reference'])) {
                $refUser = Wo_UserData($wo['additional']['reference']);
                $value = $refUser['name'] ?? '';
              }
              break;
            default:
              global $wo;
              if (!empty($wo['additional'][$name])) $value = htmlspecialchars($wo['additional'][$name]);
          }
      ?>
        <span class="<?= htmlspecialchars($name, ENT_QUOTES) ?>"
              style="position:absolute;top:<?= htmlspecialchars($top, ENT_QUOTES) ?>;left:<?= htmlspecialchars($left, ENT_QUOTES) ?>;width:<?= htmlspecialchars($width, ENT_QUOTES) ?>;font-size:<?= htmlspecialchars($fontSize, ENT_QUOTES) ?>;text-align:<?= htmlspecialchars($textAlign, ENT_QUOTES) ?>;letter-spacing:<?= htmlspecialchars($letterSpacing, ENT_QUOTES) ?>;white-space:normal;line-height:1.4;">
          <?= htmlspecialchars($value) ?>
        </span>
      <?php endforeach; ?>
    </div>
  </div>
</section>

<style>
.invoice-layout {
  position: relative;
  width: 100%;
  height: 100vh;
  page-break-inside: avoid;
}

.print_area {
  position: relative;
  width: 210mm;
  height: 297mm;
  margin: 0 auto;
  background-color: white;
  /* Ensure background image loads properly */
  background-attachment: scroll;
  background-repeat: no-repeat;
  background-position: center center;
}

/* Enhanced print styles with better image handling */
@media print {
  .print_area {
    width: 100% !important;
    height: 100% !important;
    margin: 0 !important;
    box-shadow: none !important;
    page-break-inside: avoid;
    /* Force background images to print */
    -webkit-print-color-adjust: exact !important;
    color-adjust: exact !important;
    print-color-adjust: exact !important;
  }
  
  .invoice-layout {
    height: 100vh !important;
  }
  
  /* Ensure all elements are visible in print */
  .print_area * {
    visibility: visible !important;
  }
  
  /* Hide loading states in print */
  .print_area.loading::before {
    display: none !important;
  }
}

/* Enhanced form field positioning */
.changable-content span {
  font-family: Arial, sans-serif;
  color: #000;
  font-weight: 600;
  /* Ensure text is visible over background */
  text-shadow: 0 0 2px rgba(255,255,255,0.8);
}

.changable-content .client_id {
  color: #2c3e50;
}

.changable-content .project_name {
  color: #e74c3c;
  text-transform: uppercase;
  font-weight: 700;
}

.changable-content .applicant_name {
  color: #2980b9;
  font-weight: 700;
}

.changable-content .date {
  color: #8e44ad;
  font-family: monospace;
}

/* Loading state for background images */
.print_area.loading {
  background-color: #f8f9fa;
}

.print_area.loading::before {
  content: 'Loading background...';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: #6c757d;
  font-size: 14px;
  z-index: 1000;
}

/* Image preloading indicator */
.print_area.preloading {
  opacity: 0.7;
}

.print_area.ready {
  opacity: 1;
  transition: opacity 0.3s ease;
}
</style>

<script>
// Enhanced background image preloading for print areas
jQuery(function($){
  'use strict';

  // Preload background images when print areas are created
  function preloadPrintAreaBackgrounds() {
    $('.print_area[data-bg-url]').each(function(){
      var $area = $(this);
      var bgUrl = $area.attr('data-bg-url');
      
      if (bgUrl && !$area.hasClass('bg-loaded')) {
        $area.addClass('loading');
        
        var img = new Image();
        img.onload = function() {
          $area.removeClass('loading').addClass('bg-loaded ready');
        };
        img.onerror = function() {
          $area.removeClass('loading').addClass('bg-error');
          console.warn('Failed to load background image:', bgUrl);
        };
        img.src = bgUrl;
      }
    });
  }

  // Enhanced print function with proper image loading
  window.printBookingFormsByIds = function(ids) {
    if (!ids) return;
    ids = Array.isArray(ids) ? ids : [ids];

    var nodes = [];
    ids.forEach(function(id){
      var selector = '.print_area[data-purchase-id="' + id + '"]';
      var el = $(selector)[0];
      if (el) nodes.push(el);
    });

    if (!nodes.length) {
      alert('No booking form found for printing.');
      return;
    }

    // Show loading indicator
    var $loadingIndicator = $(`
      <div id="print-loading" style="position:fixed;top:50%;left:50%;transform:translate(-50%,-50%);z-index:99999;background:white;padding:20px;border-radius:8px;box-shadow:0 4px 20px rgba(0,0,0,0.3);">
        <div class="text-center">
          <div class="spinner-border text-primary mb-3" role="status">
            <span class="visually-hidden">Loading...</span>
          </div>
          <p class="mb-0">Preparing booking forms for printing...</p>
          <small class="text-muted">Please wait while background images load</small>
        </div>
      </div>
    `);
    $('body').append($loadingIndicator);

    var $wrap = _createPrintWrapperForNodes(nodes);

    // Enhanced preload with progress tracking
    preloadBackgroundImagesWithProgress(nodes, function(progress) {
      if (progress < 100) {
        $loadingIndicator.find('p').text(`Loading images... ${Math.round(progress)}%`);
      }
    }, function() {
      // All images loaded, proceed with print
      $loadingIndicator.remove();
      
      var afterPrintHandler = function(){
        try { _cleanupPrintWrapper($wrap); } catch(e) {}
        try { window.removeEventListener('afterprint', afterPrintHandler); } catch(e) {}
      };

      window.addEventListener('afterprint', afterPrintHandler);

      // Additional delay to ensure images are fully rendered
      setTimeout(function(){
        try { window.print(); } catch(e){ console.error('Print error', e); }
        setTimeout(function(){ 
          _cleanupPrintWrapper($wrap); 
          try { window.removeEventListener('afterprint', afterPrintHandler); } catch(e){}
        }, 3000);
      }, 500);
    });
  };

  function preloadBackgroundImagesWithProgress(nodes, progressCallback, completeCallback) {
    var imageUrls = [];
    var loadedCount = 0;
    
    // Extract background image URLs from nodes
    nodes.forEach(function(node){
      var $node = $(node);
      var bgImage = $node.css('background-image');
      if (bgImage && bgImage !== 'none') {
        var match = bgImage.match(/url\(['"]?(.*?)['"]?\)/);
        if (match && match[1]) {
          imageUrls.push(match[1]);
        }
      }
      
      // Also check data-bg-url attribute
      var dataBgUrl = $node.attr('data-bg-url');
      if (dataBgUrl) {
        imageUrls.push(dataBgUrl);
      }
    });

    // Remove duplicates
    imageUrls = [...new Set(imageUrls)];

    // If no images to load, complete immediately
    if (imageUrls.length === 0) {
      progressCallback(100);
      completeCallback();
      return;
    }

    // Preload each image with progress tracking
    imageUrls.forEach(function(url) {
      var img = new Image();
      img.onload = img.onerror = function() {
        loadedCount++;
        var progress = (loadedCount / imageUrls.length) * 100;
        progressCallback(progress);
        
        if (loadedCount >= imageUrls.length) {
          completeCallback();
        }
      };
      img.src = url;
    });

    // Fallback timeout in case images don't load
    setTimeout(function() {
      if (loadedCount < imageUrls.length) {
        console.warn('Some background images did not load in time, proceeding anyway');
        completeCallback();
      }
    }, 10000); // 10 second timeout
  }

  function _createPrintWrapperForNodes(nodes) {
    var $wrap = $('<div id="print-wrapper-temp"></div>');
    $wrap.css({ position: 'relative', zIndex: 99999 });
    nodes.forEach(function(node){
      var $clone = $(node).clone(true, true);
      $clone.removeClass('d-none');
      $clone.css({ display: 'block', visibility: 'visible', position: 'relative' });
      $wrap.append($clone);
    });
    $('body').append($wrap);
    return $wrap;
  }

  function _cleanupPrintWrapper($wrap) {
    if (!$wrap || !$wrap.length) return;
    try { $wrap.remove(); } catch(e) {}
  }

  // Initialize background preloading when document is ready
  $(document).ready(function(){
    preloadPrintAreaBackgrounds();
  });

  // Also preload when modal is shown
  $('#viewClient-modal').on('shown.bs.modal', function(){
    setTimeout(preloadPrintAreaBackgrounds, 100);
  });

});
</script>